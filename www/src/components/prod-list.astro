---
import PbItem from './cards/pb-item.astro'
import { ShowMore } from './showmore'

interface Props {
  products: {
    name: string
    slug: string
    image?: string
    brand: {
      name: string
      slug: string
      image?: string
    }
  }[]
}
const { products } = Astro.props

const prodList = products.reduce(
  (acc, product) => {
    const brand = product.brand
    if (!acc[brand.slug]) acc[brand.slug] = { brand: brand, products: [] }
    acc[brand.slug].products.push(product)
    return acc
  },
  {} as Record<string, { brand: any; products: any[] }>
)
---

<div class='w-full px-8 md:px-14 py-8'>
  <div class='flex w-full justify-between px-8 py-2'>
    <p class='text-4xl font-extrabold font-gr'>Products With Brand</p>
    <button
      class='border flex gap-2 items-center border-black/50 rounded-sm px-4 py-1'>
      <span class='text-black/50'> Filter </span>
      <svg
        width='12'
        viewBox='0 0 16 19'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'>
        <path
          d='M5 2.50001C4.73478 2.50001 4.48043 2.60537 4.29289 2.7929C4.10536 2.98044 4 3.23479 4 3.50001C4 3.76523 4.10536 4.01958 4.29289 4.20712C4.48043 4.39465 4.73478 4.50001 5 4.50001C5.26522 4.50001 5.51957 4.39465 5.70711 4.20712C5.89464 4.01958 6 3.76523 6 3.50001C6 3.23479 5.89464 2.98044 5.70711 2.7929C5.51957 2.60537 5.26522 2.50001 5 2.50001ZM2.17 2.50001C2.3766 1.91448 2.75974 1.40744 3.2666 1.0488C3.77346 0.690154 4.37909 0.497559 5 0.497559C5.62091 0.497559 6.22654 0.690154 6.7334 1.0488C7.24026 1.40744 7.6234 1.91448 7.83 2.50001H15C15.2652 2.50001 15.5196 2.60537 15.7071 2.7929C15.8946 2.98044 16 3.23479 16 3.50001C16 3.76523 15.8946 4.01958 15.7071 4.20712C15.5196 4.39465 15.2652 4.50001 15 4.50001H7.83C7.6234 5.08554 7.24026 5.59258 6.7334 5.95122C6.22654 6.30986 5.62091 6.50246 5 6.50246C4.37909 6.50246 3.77346 6.30986 3.2666 5.95122C2.75974 5.59258 2.3766 5.08554 2.17 4.50001H1C0.734784 4.50001 0.48043 4.39465 0.292893 4.20712C0.105357 4.01958 0 3.76523 0 3.50001C0 3.23479 0.105357 2.98044 0.292893 2.7929C0.48043 2.60537 0.734784 2.50001 1 2.50001H2.17ZM11 8.50001C10.7348 8.50001 10.4804 8.60537 10.2929 8.7929C10.1054 8.98044 10 9.23479 10 9.50001C10 9.76523 10.1054 10.0196 10.2929 10.2071C10.4804 10.3947 10.7348 10.5 11 10.5C11.2652 10.5 11.5196 10.3947 11.7071 10.2071C11.8946 10.0196 12 9.76523 12 9.50001C12 9.23479 11.8946 8.98044 11.7071 8.7929C11.5196 8.60537 11.2652 8.50001 11 8.50001ZM8.17 8.50001C8.3766 7.91448 8.75974 7.40744 9.2666 7.0488C9.77346 6.69015 10.3791 6.49756 11 6.49756C11.6209 6.49756 12.2265 6.69015 12.7334 7.0488C13.2403 7.40744 13.6234 7.91448 13.83 8.50001H15C15.2652 8.50001 15.5196 8.60537 15.7071 8.7929C15.8946 8.98044 16 9.23479 16 9.50001C16 9.76523 15.8946 10.0196 15.7071 10.2071C15.5196 10.3947 15.2652 10.5 15 10.5H13.83C13.6234 11.0855 13.2403 11.5926 12.7334 11.9512C12.2265 12.3099 11.6209 12.5025 11 12.5025C10.3791 12.5025 9.77346 12.3099 9.2666 11.9512C8.75974 11.5926 8.3766 11.0855 8.17 10.5H1C0.734784 10.5 0.48043 10.3947 0.292893 10.2071C0.105357 10.0196 0 9.76523 0 9.50001C0 9.23479 0.105357 8.98044 0.292893 8.7929C0.48043 8.60537 0.734784 8.50001 1 8.50001H8.17ZM5 14.5C4.73478 14.5 4.48043 14.6054 4.29289 14.7929C4.10536 14.9804 4 15.2348 4 15.5C4 15.7652 4.10536 16.0196 4.29289 16.2071C4.48043 16.3947 4.73478 16.5 5 16.5C5.26522 16.5 5.51957 16.3947 5.70711 16.2071C5.89464 16.0196 6 15.7652 6 15.5C6 15.2348 5.89464 14.9804 5.70711 14.7929C5.51957 14.6054 5.26522 14.5 5 14.5ZM2.17 14.5C2.3766 13.9145 2.75974 13.4074 3.2666 13.0488C3.77346 12.6902 4.37909 12.4976 5 12.4976C5.62091 12.4976 6.22654 12.6902 6.7334 13.0488C7.24026 13.4074 7.6234 13.9145 7.83 14.5H15C15.2652 14.5 15.5196 14.6054 15.7071 14.7929C15.8946 14.9804 16 15.2348 16 15.5C16 15.7652 15.8946 16.0196 15.7071 16.2071C15.5196 16.3947 15.2652 16.5 15 16.5H7.83C7.6234 17.0855 7.24026 17.5926 6.7334 17.9512C6.22654 18.3099 5.62091 18.5025 5 18.5025C4.37909 18.5025 3.77346 18.3099 3.2666 17.9512C2.75974 17.5926 2.3766 17.0855 2.17 16.5H1C0.734784 16.5 0.48043 16.3947 0.292893 16.2071C0.105357 16.0196 0 15.7652 0 15.5C0 15.2348 0.105357 14.9804 0.292893 14.7929C0.48043 14.6054 0.734784 14.5 1 14.5H2.17Z'
          fill='black'
          fill-opacity='0.5'></path>
      </svg>
    </button>
  </div>
  <div
    class='w-full flex-col flex px-8 md:px-14 py-8 gap-10 md:gap-20 place-items-center'>
    {
      Object.values(prodList).map((brand) => {
        const extendedList = brand.products.slice(4)
        return (
          <div class='w-full space-y-1'>
            <div class='flex items-center justify-center w-[100px]  '>
              <img
                src={brand.brand.image || '/imgg.png'}
                alt={brand.brand.name}
                alt={brand.brand.name}
                class='rounded-md w-full object-cover'
                loading='lazy'
              />
            </div>
            <div class='w-full flex flex-wrap gap-8 md:gap-10 '>
              {brand.products.slice(0, 4).map((product) => (
                <PbItem key={product.slug} {...product} />
              ))}
              {extendedList.length > 0 &&
                extendedList.map((product) => (
                  <PbItem {...product} class={`extended-list-prods hidden`} />
                ))}
            </div>
            {extendedList.length > 0 && (
              <ShowMore
                client:load
                id='prods'
                className='flex items-center gap-2 text-black font-medium px-3 py-1.5'
                type='black'
              />
            )}
          </div>
        )
      })
    }
  </div>
</div>
